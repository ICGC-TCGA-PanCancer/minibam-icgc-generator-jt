workflow:
  name:  minibam-icgc-generator
  version: "0.0.1"
  source_code: "https://github.com/ICGC-TCGA-PanCancer/minibam-icgc-generator-jt"

  runtime:
    docker: null

  execution:
    constraint: same_worker  # other values: 'shared_fs' (not supported yet), 'same_host'
    memory: 4g
    cpu: 2

  input:
    indel_padding:
      type: integer
    snv_padding:
      type: integer
    sv_padding:
      type: integer
    sample_submitter_id:
      type: string
    sample_type:
      type: string
    analysis:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    project_code:
      type: string
    experiment:
      type: object
      properties:
        aligned:
          type: boolean
        library_strategy:
          type: string
        reference_genome:
          type: string
    normal_bam:
      type: object
      properties:
        object_id:
          type: string
        aliquot_id:
          type: string
        file_name:
          type: string
        file_md5sum:
          type: string
        file_size:
          type: integer
        minibam:
          type: object
          properties:
            access:
              type: string
            bam_file_name:
              type: string
            bai_file_name:
              type: string
        sample:
          type: object
          properties:
            donor:
              type: object
              properties:
                gender:
                  type: string
                submitter_id:
                  type: string
            submitter_id:
              type: string
            sample_type:
              type: string
            specimen:
              type: object
              properties:
                class:
                  type: string
                submitter_id:
                  type: string
                specimen_type:
                  type: string
    tumour_bams:
      type: array
      items:
        type: object
        properties:
          object_id:
            type: string
          file_name:
            type: string
          file_md5sum:
            type: string
          file_size:
            type: integer
          aliquot_id:
            type: string
          oxog_score:
            type: float
          minibam:
            type: object
            properties:
              bam_file_name:
                type: string
              bai_file_name:
                type: string
          sample:
            type: object
            properties:
              donor:
                type: object
                properties:
                  gender:
                    type: string
                  submitter_id:
                    type: string
              submitter_id:
                type: string
              sample_type:
                type: string
              specimen:
                type: object
                properties:
                  class:
                    type: string
                  submitter_id:
                    type: string
                  specimen_type:
                    type: string
    associated_vcfs:
      type: array
      items:
        type: object
        properties:
          object_id:
            type: string
          file_name:
            type: string
          file_md5sum:
            type: string
          file_size:
            type: integer

  output: null  # we may not need this, does the workflow as a whole need some sort of output? or output from individual tasks is just fine

  tasks:
    download_files:
      tool: download_files
      input:
        normal_bam: normal_bam
        tumour_bams: tumour_bams
        vcf_files: associated_vcfs
      depends_on: null

    generate_minibam:
      tool: generate_minibam
      input:
        input_directory: directory@download_files
        normal_bam: normal_bam
        tumour_bams: tumour_bams
        vcf_files: associated_vcfs
        sv_padding: sv_padding
        snv_padding: snv_padding
        indel_padding: indel_padding
      depends_on:
      - completed@download_files

    generate_song_payloads:
      tool: generate_song_payloads
      input:
        input_directory: directory@download_files
        normal_bam: normal_bam
        tumor_bams: tumor_bams
        experiment: experiment
        analysis: analysis
      depends_on:
      - completed@generate_minibam

    upload_minibams:
      tool: upload_minibams
      input:
        input_directory: directory@download_files
        payloads: payloads@generate_song_payloads
        normal_bam: normal_bam
        tumour_bams: tumour_bams
        study_id: project_code
      depends_on:
      - completed@download_files

    clean_directory:
      tool: clean_direcoty
      input:
        input_directory: directory@download_files
      depends_on:
      - completed@upload_minibams

# A workflow is made up with one or more tools
# Each tool can have its own docker imagine if desirable
tools:
  download_files:  # make a new XML cancatenate original EGA XMLs: study, sample, analysis/(experiment and run)
    command: download.py
    input:
      normal_bam:
        type: object
      tumour_bams:
        type: array
      vcf_files:
        type: array
    output:
      directory:
        type: string

  generate_minibam:
    command: generate_minibam.py
    input:
      input_directory:
        type: string
      normal_bam:
        type: object
      tumour_bams:
        type: array
      vcf_files:
        type: array
      snv_padding:
        type: integer
      snv_padding:
        type: integer
      indel_padding:
        type: integer
    output:
      output_directory:
        type: string

  generate_song_payloads:
    command: generate_song_payloads.py
    input:
      input_directory:
        type: string
      normal_bam:
        type: object
      tumor_bams:
        type: array
      experiment:
        type: object
      analysis:
        type: object
    output:
      payloads:
        type: array

  upload_minibams:
    command: upload.py
    input:
      payloads:
        type: array
      normal_bam:
        type: string
      tumour_bams:
        type: array
      study_id:
        type: string

  clean_directory:
    command: clean_directory.py
    input:
      input_directory:
        type: string